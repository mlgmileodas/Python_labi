from abc import ABC, abstractmethod

class Устройство(ABC):
    def __init__(self, название: str, производитель: str):
        self.название = название
        self.производитель = производитель

    def __str__(self):
        return f"{self.__class__.__name__}(название='{self.название}', производитель='{self.производитель}')"

    def __repr__(self):
        return str(self)

    @abstractmethod
    def подключить(self) -> bool:
        pass

class ПК(Устройство):
    def __init__(self, название: str, производитель: str, процессор: str, оперативная_память: int):
        super().__init__(название, производитель)
        self.процессор = процессор
        self.оперативная_память = оперативная_память

    def подключить(self) -> bool:
        print(f"ПК '{self.название}' подключен.")
        return True

    def запустить(self):
        print(f"ПК '{self.название}' запущен.")

    def __str__(self):
        return f"{super().__str__()} (процессор='{self.процессор}', ОЗУ={self.оперативная_память} ГБ)"

class Периферия(Устройство, ABC):
    def __init__(self, название: str, производитель: str, тип_подключения: str):
        super().__init__(название, производитель)
        self.тип_подключения = тип_подключения

    def получить_тип_подключения(self) -> str:
        return self.тип_подключения

class Монитор(Периферия):
    def __init__(self, название: str, производитель: str, тип_подключения: str, диагональ: float):
        super().__init__(название, производитель, тип_подключения)
        self.диагональ = диагональ

    def подключить(self) -> bool:
        print(f"Монитор '{self.название}' подключен.")
        return True

    def показать_изображение(self, изображение: str):
        print(f"Монитор '{self.название}' показывает: {изображение}")

class Клавиатура(Периферия):
    def __init__(self, название: str, производитель: str, тип_подключения: str, раскладка: str):
        super().__init__(название, производитель, тип_подключения)
        self.раскладка = раскладка

    def подключить(self) -> bool:
        print(f"Клавиатура '{self.название}' подключена.")
        return True

    def ввести_текст(self, текст: str):
        print(f"Клавиатура '{self.название}' ввела: {текст}")

class Мышь(Периферия):
    def __init__(self, название: str, производитель: str, тип_подключения: str, тип_сенсора: str):
        super().__init__(название, производитель, тип_подключения)
        self.тип_сенсора = тип_сенсора

    def подключить(self) -> bool:
        print(f"Мышь '{self.название}' подключена.")
        return True

    def кликнуть(self, кнопка: str):
        print(f"Мышь '{self.название}' кликнула: {кнопка}")